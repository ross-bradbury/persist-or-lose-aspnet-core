using System;
using System.Text;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc.Formatters;
using Newtonsoft.Json;

namespace MyWebApi.Models
{
    public class TodoItemOutputFormatter : IOutputFormatter
    {
        public bool CanWriteResult(OutputFormatterCanWriteContext context)
        {
            if (context == null)
                throw new ArgumentNullException(nameof(context));

            if (context.ObjectType != typeof(TodoItem))
                return false;

            if (context.ContentType == null
                || context.ContentType.ToString() == "application/json")
                return true;

            return false;
        }

        public async Task WriteAsync(OutputFormatterWriteContext context)
        {
            if (context == null)
                throw new ArgumentNullException(nameof(context));

            var response = context.HttpContext.Response;

            response.ContentType = "application/json";

            using (var writer = context.WriterFactory(response.Body, Encoding.UTF8))
            using (var w = new JsonTextWriter(writer))
            {
                ((TodoItem)context.Object).AsJObject().WriteTo(w);
                await writer.FlushAsync();
            }
        }
    }
}